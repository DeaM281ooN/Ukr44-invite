from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import types # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —ç—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –µ—Å—Ç—å –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è types.CallbackQuery

@dp.message(Command("start"))
async def start(message: Message):
    main_menu_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–û Ukr44", callback_data="about_ukr44")],
        [InlineKeyboardButton(text="–ö–∞–∫ —Å—Ç–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º?", callback_data="how_to_join")],
        [InlineKeyboardButton(text="–ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts_info")],
        [InlineKeyboardButton(text="–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∏ —Ä–∞–∑–≤–∏—Ç–∏–µ", callback_data="education_menu")],
        [InlineKeyboardButton(text="–ü–æ–º–æ—â—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="support_menu")],
        [InlineKeyboardButton(text="–°–æ–æ–±—â–µ—Å—Ç–≤–æ –∏ —Å–æ–±—ã—Ç–∏—è", callback_data="community_menu")]
    ])
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ Ukr44 –ë–æ—Ç. –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:", reply_markup=main_menu_keyboard)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é ---

@dp.callback_query(lambda c: c.data == 'about_ukr44')
async def process_about_ukr44(callback_query: types.CallbackQuery):
    await callback_query.message.answer("Ukr44 ‚Äî —ç—Ç–æ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ –¥–ª—è —É–∫—Ä–∞–∏–Ω—Å–∫–∏—Ö –ø–µ—Ä–µ—Å–µ–ª–µ–Ω—Ü–µ–≤ –≤ –ì–∞–ª–ª–µ (–ó–∞–∞–ª–µ), –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–º–æ–≥–∞–µ—Ç –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è, –æ–±—É—á–∞—Ç—å—Å—è –∏ –Ω–∞–π—Ç–∏ —Å–≤–æ—ë –º–µ—Å—Ç–æ –≤ –ì–µ—Ä–º–∞–Ω–∏–∏. –ù–∞—à–∞ —Ü–µ–ª—å ‚Äî –≤–∞—à–∞ —Å–∞–º–æ—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å.")
    await callback_query.answer() # –£–±–∏—Ä–∞–µ—Ç "—á–∞—Å–∏–∫–∏" —Å –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è

@dp.callback_query(lambda c: c.data == 'how_to_join')
async def process_how_to_join(callback_query: types.CallbackQuery):
    await callback_query.message.answer("–ß—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ Ukr44 –∏ —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–µ–±–æ–ª—å—à—É—é –∞–Ω–∫–µ—Ç—É. –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ª—É—á—à–µ –ø–æ–Ω—è—Ç—å –≤–∞—à–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ù–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∞–Ω–∫–µ—Ç—ã (–æ–Ω–∞ –∂–µ –≤–∫–ª—é—á–∞–µ—Ç –≤–∞—à–µ –∏–º—è –∏ –Ω–∞–≤—ã–∫–∏).")
    await callback_query.answer()

@dp.callback_query(lambda c: c.data == 'contacts_info')
async def process_contacts_info(callback_query: types.CallbackQuery):
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    await callback_query.message.answer(
        "–ù–∞—à–∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã:\n"
        "üìû **–¢–µ–ª–µ—Ñ–æ–Ω:** [–≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, +49 123 4567890]\n"
        "üìß **Email:** [–≤–∞—à email, –Ω–∞–ø—Ä–∏–º–µ—Ä, ukr44.halle@email.de]\n"
        "üåê **–í–µ–±—Å–∞–π—Ç:** [–µ—Å–ª–∏ –µ—Å—Ç—å, –Ω–∞–ø—Ä–∏–º–µ—Ä, www.ukr44.de]\n"
        "üìç **–ê–¥—Ä–µ—Å:** [–µ—Å–ª–∏ –µ—Å—Ç—å —Ñ–∏–∑–∏—á–µ—Å–∫–∏–π –æ—Ñ–∏—Å –∏–ª–∏ –º–µ—Å—Ç–æ –≤—Å—Ç—Ä–µ—á, –Ω–∞–ø—Ä–∏–º–µ—Ä, Musterstrasse 1, 06108 Halle (Saale)]"
    )
    await callback_query.answer()

@dp.callback_query(lambda c: c.data == 'education_menu')
async def process_education_menu(callback_query: types.CallbackQuery):
    education_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ö—É—Ä—Å—ã –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞", callback_data="german_courses")],
        [InlineKeyboardButton(text="–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å", callback_data="financial_literacy")],
        [InlineKeyboardButton(text="–†–∞–∑–≤–∏—Ç–∏–µ –∫–∞—Ä—å–µ—Ä—ã –∏ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ", callback_data="career_development")]
    ])
    await callback_query.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=education_keyboard)
    await callback_query.answer()

@dp.callback_query(lambda c: c.data == 'support_menu')
async def process_support_menu(callback_query: types.CallbackQuery):
    support_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü–æ–º–æ—â—å —Å –∂–∏–ª—å—ë–º", callback_data="housing_support")],
        [InlineKeyboardButton(text="–°–æ—Ü–∏–∞–ª—å–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞", callback_data="social_support")],
        [InlineKeyboardButton(text="–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–º–æ—â—å –∏ —ç–∫—Å–ø—Ä–µ—Å—Å-–ø–∏—Ç–∞–Ω–∏–µ", callback_data="practical_help")]
    ])
    await callback_query.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=support_keyboard)
    await callback_query.answer()

@dp.callback_query(lambda c: c.data == 'community_menu')
async def process_community_menu(callback_query: types.CallbackQuery):
    community_keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è", callback_data="upcoming_events")],
        [InlineKeyboardButton(text="–ù–∞—à–∏ –∏—Å—Ç–æ—Ä–∏–∏ —É—Å–ø–µ—Ö–∞", callback_data="success_stories")],
        [InlineKeyboardButton(text="–û–±—Å—É–∂–¥–µ–Ω–∏—è –∏ –æ–±–º–µ–Ω –æ–ø—ã—Ç–æ–º", callback_data="discussions")]
    ])
    await callback_query.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=community_keyboard)
    await callback_query.answer()

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ–¥–º–µ–Ω—é (–ø—Ä–∏–º–µ—Ä) ---

@dp.callback_query(lambda c: c.data == 'german_courses')
async def process_german_courses(callback_query: types.CallbackQuery):
    await callback_query.message.answer(
        "**–ö—É—Ä—Å—ã –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞ Ukr44:**\n"
        "–ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ –∫—É—Ä—Å—ã –Ω–µ–º–µ—Ü–∫–æ–≥–æ —è–∑—ã–∫–∞ –¥–ª—è –≤—Å–µ—Ö —É—Ä–æ–≤–Ω–µ–π, –æ—Ç A1 –¥–æ B1 –∏ –≤—ã—à–µ. –ù–∞—à–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏, —á—Ç–æ–±—ã –≤—ã –±—ã—Å—Ç—Ä–æ –æ—Å–≤–æ–∏–ª–∏ —è–∑—ã–∫ –¥–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ–π –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.\n\n"
        "üìù **–ß—Ç–æ –≤–∞—Å –∂–¥—ë—Ç:**\n"
        "- –ì—Ä—É–ø–ø–æ–≤—ã–µ –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è.\n"
        "- –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–µ –∫–ª—É–±—ã –¥–ª—è –ø—Ä–∞–∫—Ç–∏–∫–∏.\n"
        "- –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —ç–∫–∑–∞–º–µ–Ω–∞–º.\n\n"
        "üëâ –ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∏–ª–∏ —É–∑–Ω–∞—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª '–ö–æ–Ω—Ç–∞–∫—Ç—ã' –∏–ª–∏ —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –Ω–æ–≤–æ—Å—Ç—è–º–∏ –≤ '–ü—Ä–µ–¥—Å—Ç–æ—è—â–∏—Ö —Å–æ–±—ã—Ç–∏—è—Ö'."
    )
    await callback_query.answer()

@dp.callback_query(lambda c: c.data == 'financial_literacy')
async def process_financial_literacy(callback_query: types.CallbackQuery):
    await callback_query.message.answer(
        "**–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å —Å Ukr44:**\n"
        "–ü–æ–Ω–∏–º–∞–Ω–∏–µ –Ω–µ–º–µ—Ü–∫–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã ‚Äî –∫–ª—é—á –∫ –≤–∞—à–µ–π —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏. –ù–∞—à–∏ –∫—É—Ä—Å—ã –æ—Ö–≤–∞—Ç—ã–≤–∞—é—Ç:\n"
        "- –û—Ç–∫—Ä—ã—Ç–∏–µ –±–∞–Ω–∫–æ–≤—Å–∫–æ–≥–æ —Å—á–µ—Ç–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–º.\n"
        "- –ù–∞–ª–æ–≥–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –ì–µ—Ä–º–∞–Ω–∏–∏.\n"
        "- –û—Å–Ω–æ–≤—ã —Å–±–µ—Ä–µ–∂–µ–Ω–∏–π –∏ —Ä–∞–∑—É–º–Ω—ã—Ö –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π.\n"
        "- –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–∏—á–Ω–æ–≥–æ –±—é–¥–∂–µ—Ç–∞.\n\n"
        "üéØ **–ù–∞—à–∞ —Ü–µ–ª—å** ‚Äî –ø–æ–º–æ—á—å –≤–∞–º —Å—Ç–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã–º–∏ –∏ —É–≤–µ—Ä–µ–Ω–Ω—ã–º–∏ –≤ –∑–∞–≤—Ç—Ä–∞—à–Ω–µ–º –¥–Ω–µ."
    )
    await callback_query.answer()

@dp.callback_query(lambda c: c.data == 'career_development')
async def process_career_development(callback_query: types.CallbackQuery):
    await callback_query.message.answer(
        "**–†–∞–∑–≤–∏—Ç–∏–µ –∫–∞—Ä—å–µ—Ä—ã –∏ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:**\n"
        "–ú—ã –∞–∫—Ç–∏–≤–Ω–æ –ø–æ–º–æ–≥–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º Ukr44 –Ω–∞–π—Ç–∏ —Ä–∞–±–æ—Ç—É –≤ –ì–µ—Ä–º–∞–Ω–∏–∏. –ù–∞—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã –≤–∫–ª—é—á–∞—é—Ç:\n"
        "- **–°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—é–º–µ –∏ –º–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö –ø–∏—Å–µ–º** –ø–æ –Ω–µ–º–µ—Ü–∫–∏–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º.\n"
        "- **–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è–º** –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—ã–µ –∏–Ω—Ç–µ—Ä–≤—å—é.\n"
        "- **–ü—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏—è** –∏ –ø–æ–º–æ—â—å –≤ –≤—ã–±–æ—Ä–µ –ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω–æ–π —Å—Ñ–µ—Ä—ã.\n"
        "- **–ü–æ–∏—Å–∫ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –≤–∞–∫–∞–Ω—Å–∏–π** –∏ –∫–æ–Ω—Ç–∞–∫—Ç—ã —Å —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—è–º–∏.\n\n"
        "–ú—ã –≤–µ—Ä–∏–º, —á—Ç–æ –∫–∞–∂–¥—ã–π –Ω–∞–π–¥—ë—Ç —Ä–∞–±–æ—Ç—É –ø–æ –¥—É—à–µ –∏ —Å–≤–æ–∏–º —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º!"
    )
    await callback_query.answer()

# --- –í–ê–ñ–ù–û: –ù–∏–∂–µ –¥–æ–ª–∂–µ–Ω –∏–¥—Ç–∏ –≤–∞—à —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–Ω–∫–µ—Ç—ã –∏ –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
# @dp.message() async def process(message: Message): ...
# async def main(): ...
# if __name__ == "__main__": ...
